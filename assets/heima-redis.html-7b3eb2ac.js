const n=JSON.parse('{"key":"v-254a5034","path":"/Extension/heima-redis.html","title":"hmdp-redis","lang":"zh-CN","frontmatter":{"category":["Extension"],"tag":["Redis","Cache","SpringBoot"],"description":"hmdp-redis maptobean beantomap copybean copybeanlist 短信登录 tomcat sessionid session 保存验证码 发送验证码 校验验证码 登录校验 拦截器 public class LoginInterceptor implements HandlerInterceptor { @Override public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception { // 获取请求携带的session HttpSession session = request.getSession(); // 获取session中的用户 UserDTO user = (UserDTO) session.getAttribute(SystemConstants.LOGIN_USER_PREFIX); // 用户不存在，拦截 if (user == null){ // 返回状态，应该统一处理形式 response.setStatus(401); return false; } // 存在，保存用户信息到ThreadLocal // todo: 为什么放ThreadLocal，为了线程内 UserDtoHolder.saveUser(user); // 放行 return true; } @Override public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception { // 这个在什么时候执行？ UserDtoHolder.removeUser(); } }","head":[["meta",{"property":"og:url","content":"https://docs.keeend.eu.org/Extension/heima-redis.html"}],["meta",{"property":"og:site_name","content":"云聲笔记"}],["meta",{"property":"og:title","content":"hmdp-redis"}],["meta",{"property":"og:description","content":"hmdp-redis maptobean beantomap copybean copybeanlist 短信登录 tomcat sessionid session 保存验证码 发送验证码 校验验证码 登录校验 拦截器 public class LoginInterceptor implements HandlerInterceptor { @Override public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception { // 获取请求携带的session HttpSession session = request.getSession(); // 获取session中的用户 UserDTO user = (UserDTO) session.getAttribute(SystemConstants.LOGIN_USER_PREFIX); // 用户不存在，拦截 if (user == null){ // 返回状态，应该统一处理形式 response.setStatus(401); return false; } // 存在，保存用户信息到ThreadLocal // todo: 为什么放ThreadLocal，为了线程内 UserDtoHolder.saveUser(user); // 放行 return true; } @Override public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception { // 这个在什么时候执行？ UserDtoHolder.removeUser(); } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-20T13:35:24.000Z"}],["meta",{"property":"article:author","content":"Keen"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:tag","content":"Cache"}],["meta",{"property":"article:tag","content":"SpringBoot"}],["meta",{"property":"article:modified_time","content":"2023-04-20T13:35:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"hmdp-redis\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-20T13:35:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Keen\\",\\"url\\":\\"https://docs.keeend.eu.org/\\"}]}"]]},"headers":[{"level":2,"title":"短信登录","slug":"短信登录","link":"#短信登录","children":[{"level":3,"title":"登录校验","slug":"登录校验","link":"#登录校验","children":[]},{"level":3,"title":"session共享问题","slug":"session共享问题","link":"#session共享问题","children":[]},{"level":3,"title":"redis","slug":"redis","link":"#redis","children":[]}]},{"level":2,"title":"商户查询缓存","slug":"商户查询缓存","link":"#商户查询缓存","children":[{"level":3,"title":"缓存更新策略","slug":"缓存更新策略","link":"#缓存更新策略","children":[]},{"level":3,"title":"缓存穿透","slug":"缓存穿透","link":"#缓存穿透","children":[]},{"level":3,"title":"缓存雪崩","slug":"缓存雪崩","link":"#缓存雪崩","children":[]},{"level":3,"title":"缓存击穿","slug":"缓存击穿","link":"#缓存击穿","children":[]},{"level":3,"title":"缓存工具封装","slug":"缓存工具封装","link":"#缓存工具封装","children":[]}]},{"level":2,"title":"优惠券秒杀","slug":"优惠券秒杀","link":"#优惠券秒杀","children":[{"level":3,"title":"全局唯一id","slug":"全局唯一id","link":"#全局唯一id","children":[]},{"level":3,"title":"实现优惠券秒杀下单","slug":"实现优惠券秒杀下单","link":"#实现优惠券秒杀下单","children":[]},{"level":3,"title":"超卖问题","slug":"超卖问题","link":"#超卖问题","children":[]},{"level":3,"title":"一人一单","slug":"一人一单","link":"#一人一单","children":[]}]},{"level":2,"title":"分布式锁","slug":"分布式锁","link":"#分布式锁","children":[{"level":3,"title":"分布式锁误删问题","slug":"分布式锁误删问题","link":"#分布式锁误删问题","children":[]},{"level":3,"title":"分布式锁的原子性问题","slug":"分布式锁的原子性问题","link":"#分布式锁的原子性问题","children":[]}]},{"level":2,"title":"Redisson","slug":"redisson","link":"#redisson","children":[{"level":3,"title":"Redisson可重入锁原理","slug":"redisson可重入锁原理","link":"#redisson可重入锁原理","children":[]},{"level":3,"title":"锁重试和watchdog机制?","slug":"锁重试和watchdog机制","link":"#锁重试和watchdog机制","children":[]}]},{"level":2,"title":"秒杀优化","slug":"秒杀优化","link":"#秒杀优化","children":[{"level":3,"title":"异步秒杀思路","slug":"异步秒杀思路","link":"#异步秒杀思路","children":[]}]},{"level":2,"title":"Redis消息队列","slug":"redis消息队列","link":"#redis消息队列","children":[]},{"level":2,"title":"达人探店","slug":"达人探店","link":"#达人探店","children":[{"level":3,"title":"发布探店笔记","slug":"发布探店笔记","link":"#发布探店笔记","children":[]},{"level":3,"title":"查看探店笔记","slug":"查看探店笔记","link":"#查看探店笔记","children":[]},{"level":3,"title":"点赞功能","slug":"点赞功能","link":"#点赞功能","children":[]},{"level":3,"title":"详情页点赞数据","slug":"详情页点赞数据","link":"#详情页点赞数据","children":[]}]},{"level":2,"title":"好友关注","slug":"好友关注","link":"#好友关注","children":[{"level":3,"title":"关注和取关","slug":"关注和取关","link":"#关注和取关","children":[]},{"level":3,"title":"共同关注","slug":"共同关注","link":"#共同关注","children":[]},{"level":3,"title":"关注推送","slug":"关注推送","link":"#关注推送","children":[]},{"level":3,"title":"滚动分页查询收件箱","slug":"滚动分页查询收件箱","link":"#滚动分页查询收件箱","children":[]},{"level":3,"title":"附近商户功能","slug":"附近商户功能","link":"#附近商户功能","children":[]},{"level":3,"title":"用户签到","slug":"用户签到","link":"#用户签到","children":[]},{"level":3,"title":"UV","slug":"uv","link":"#uv","children":[]}]}],"git":{"createdTime":1681997724000,"updatedTime":1681997724000,"contributors":[{"name":"XuChangeShine","email":"XuChangeShine@163.com","commits":1}]},"readingTime":{"minutes":10.1,"words":3030},"filePathRelative":"Extension/heima-redis.md","localizedDate":"2023年4月20日","excerpt":"<h1> hmdp-redis</h1>\\n<p>maptobean</p>\\n<p>beantomap</p>\\n<p>copybean</p>\\n<p>copybeanlist</p>\\n<h2> 短信登录</h2>\\n<p>tomcat sessionid session</p>\\n<p>保存验证码</p>\\n<p>发送验证码</p>\\n<p>校验验证码</p>\\n<h3> 登录校验</h3>\\n<p>拦截器</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">LoginInterceptor</span> <span class=\\"token keyword\\">implements</span> <span class=\\"token class-name\\">HandlerInterceptor</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token annotation punctuation\\">@Override</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">boolean</span> <span class=\\"token function\\">preHandle</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">HttpServletRequest</span> request<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">HttpServletResponse</span> response<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">Object</span> handler<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">throws</span> <span class=\\"token class-name\\">Exception</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// 获取请求携带的session</span>\\n        <span class=\\"token class-name\\">HttpSession</span> session <span class=\\"token operator\\">=</span> request<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getSession</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// 获取session中的用户</span>\\n        <span class=\\"token class-name\\">UserDTO</span> user <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">UserDTO</span><span class=\\"token punctuation\\">)</span> session<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getAttribute</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">SystemConstants</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">LOGIN_USER_PREFIX</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// 用户不存在，拦截</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>user <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token comment\\">// 返回状态，应该统一处理形式</span>\\n            response<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setStatus</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">401</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token comment\\">// 存在，保存用户信息到ThreadLocal</span>\\n        <span class=\\"token comment\\">// todo: 为什么放ThreadLocal，为了线程内</span>\\n        <span class=\\"token class-name\\">UserDtoHolder</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">saveUser</span><span class=\\"token punctuation\\">(</span>user<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// 放行</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token annotation punctuation\\">@Override</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">afterCompletion</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">HttpServletRequest</span> request<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">HttpServletResponse</span> response<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">Object</span> handler<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">Exception</span> ex<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">throws</span> <span class=\\"token class-name\\">Exception</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// 这个在什么时候执行？</span>\\n        <span class=\\"token class-name\\">UserDtoHolder</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">removeUser</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"Keen"},"autoDesc":true}');export{n as data};
