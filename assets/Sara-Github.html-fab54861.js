const e=JSON.parse('{"key":"v-b52728a2","path":"/Extension/Sara-Github.html","title":"Sara项目总结","lang":"zh-CN","frontmatter":{"category":["Extension"],"tag":["Blog"],"description":"Sara项目总结 权限系统 自己实现的权限系统带注解loginCheck PoetryCache定时器线程池和缓存实体对象Entity 用来存对应登录用户的相关数据数据和token, 类似UserDetail和authticationToken getToken拿的是请求头的token, 然后根据token再从缓存池中拿用户 每验证一次token重置过期时间，也就是长时间未登录才过期token 那我是不是可以在userdetail里面放token 这个缓存池的作用是一个简易版redis 这个注解类似@PreAuthorize","head":[["meta",{"property":"og:url","content":"https://docs.keeend.eu.org/Extension/Sara-Github.html"}],["meta",{"property":"og:site_name","content":"云聲笔记"}],["meta",{"property":"og:title","content":"Sara项目总结"}],["meta",{"property":"og:description","content":"Sara项目总结 权限系统 自己实现的权限系统带注解loginCheck PoetryCache定时器线程池和缓存实体对象Entity 用来存对应登录用户的相关数据数据和token, 类似UserDetail和authticationToken getToken拿的是请求头的token, 然后根据token再从缓存池中拿用户 每验证一次token重置过期时间，也就是长时间未登录才过期token 那我是不是可以在userdetail里面放token 这个缓存池的作用是一个简易版redis 这个注解类似@PreAuthorize"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-20T13:35:24.000Z"}],["meta",{"property":"article:author","content":"Keen"}],["meta",{"property":"article:tag","content":"Blog"}],["meta",{"property":"article:modified_time","content":"2023-04-20T13:35:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Sara项目总结\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-20T13:35:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Keen\\",\\"url\\":\\"https://docs.keeend.eu.org/\\"}]}"]]},"headers":[{"level":2,"title":"权限系统","slug":"权限系统","link":"#权限系统","children":[{"level":3,"title":"缓存池","slug":"缓存池","link":"#缓存池","children":[]}]},{"level":2,"title":"程序启动任务","slug":"程序启动任务","link":"#程序启动任务","children":[]},{"level":2,"title":"前后端交互","slug":"前后端交互","link":"#前后端交互","children":[]},{"level":2,"title":"注册检查","slug":"注册检查","link":"#注册检查","children":[]},{"level":2,"title":"登录","slug":"登录","link":"#登录","children":[{"level":3,"title":"它的token实现","slug":"它的token实现","link":"#它的token实现","children":[]}]},{"level":2,"title":"获取验证码","slug":"获取验证码","link":"#获取验证码","children":[]},{"level":2,"title":"全局异常处理器","slug":"全局异常处理器","link":"#全局异常处理器","children":[]},{"level":2,"title":"聊天室系统","slug":"聊天室系统","link":"#聊天室系统","children":[]}],"git":{"createdTime":1681997724000,"updatedTime":1681997724000,"contributors":[{"name":"XuChangeShine","email":"XuChangeShine@163.com","commits":1}]},"readingTime":{"minutes":2.37,"words":711},"filePathRelative":"Extension/Sara-Github.md","localizedDate":"2023年4月20日","excerpt":"<h1> Sara项目总结</h1>\\n<h2> 权限系统</h2>\\n<p>自己实现的权限系统带注解loginCheck</p>\\n<p>PoetryCache定时器线程池和缓存实体对象Entity</p>\\n<p>用来存对应登录用户的相关数据数据和token, 类似UserDetail和authticationToken</p>\\n<p>getToken拿的是请求头的token, 然后根据token再从缓存池中拿用户</p>\\n<p>每验证一次token重置过期时间，也就是长时间未登录才过期token</p>\\n<blockquote>\\n<p>那我是不是可以在userdetail里面放token\\n这个缓存池的作用是一个简易版redis\\n这个注解类似@PreAuthorize</p>\\n</blockquote>","copyright":{"author":"Keen"},"autoDesc":true}');export{e as data};
