import{_ as e,Y as o,Z as l,$ as n,a0 as s,a1 as t,a2 as p,E as c}from"./framework-e3f91821.js";const i={},u=n("h1",{id:"blog-开发",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#blog-开发","aria-hidden":"true"},"#"),s(" Blog 开发")],-1),r=n("li",null,"》更加好的前后端分离实例ResponseResult ResponseResult<?>",-1),d=n("li",null,"》全局异常处理",-1),k=n("li",null,"》Dto和Vo的实例",-1),v=n("li",null,"》日志解耦，可以使用aop加注解",-1),m=n("li",null,"》原生sql语句与mp使用wrapper",-1),g=n("li",null,"》数据库自动实现添加创建时间和修改时间与mp实现有什么不同",-1),h=n("li",null,"》注入mapper与注入service",-1),_={href:"https://www.zhihu.com/question/33659578",target:"_blank",rel:"noopener noreferrer"},b=n("li",null,"》程序终止时viewCount未写入mybatis SpringBoot @PostConstruct和@PreDestroy使用 注: @PreDestroy已经从jdk 11版本开始移除了，所以在使用时需要额外引入javax.annotation-api： 实现接口DisposableBean",-1),f=n("li",null,"》article更新只有在内容更新时才自动填充更新时间",-1),q=n("li",null,"》HttpServletResponse类定义的代码",-1),w=n("li",null,"》MediaType.APPLICATION_JSON_VALUE、",-1),y=n("li",null,"》为什么都是逻辑删除",-1),x=n("p",null,"博客系统",-1),j={href:"https://blog.csdn.net/qq_52030824/article/details/127982206?",target:"_blank",rel:"noopener noreferrer"},A=p(`<p>maven多模块以及多模块之间的调用问题install根</p><p>公共部分framework</p><p>前台</p><p>后台</p><h2 id="前端功能" tabindex="-1"><a class="header-anchor" href="#前端功能" aria-hidden="true">#</a> 前端功能</h2><h3 id="需求分析" tabindex="-1"><a class="header-anchor" href="#需求分析" aria-hidden="true">#</a> 需求分析</h3><p>使用VO优化</p><p>联系 DTO类和VO类都是在java程序开发过程中用来接收数据和返回数据的类</p><p>区别 DTO代表服务层需要接收的数据和返回的数据</p><p>VO代表展示层需要显示的数据</p><p>字面值处理，使用常量类</p><p>封装Bean拷贝工具类</p><p>lombok链式</p><p>时间格式转化，配置fastjson</p><p>登录未带token异常处理</p><ul><li>统一异常处理</li></ul><p>前端token过期检查</p><ul><li>评论文章</li></ul><p>根评论</p><p>子评论</p><p>**问题：**评论头像？</p><p>id找不到可能是已删除，user判空，toUser判空</p><ul><li>发送评论</li></ul><p>SecurityUtils</p><p>配置MP字段自动填充，所以这个和数据库完成这个操作有什么区别呢</p><p>java.lang.String cannot be cast to org.blog.domain.entity.LoginUser</p><p>token失效后用postman发送成功。不带token发送成功</p><p>友链评论type</p><ul><li><p>个人中心</p></li><li><p>头像上传</p></li></ul><p>使用oss,七牛云</p><p>测试使用七牛云对象存储</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.qiniu<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>qiniu-java-sdk<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>[7.7.0, 7.7.99]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对应文件夹滚动名称</p><p>上传实现</p><p>前端上传好像没带token?</p><p>评论区头像问题</p><ul><li>注册账号</li></ul><p>validation参数校验</p><ul><li>Aop实现日志记录接口调用信息</li></ul><p>自定义注解知识</p><ul><li>更新浏览次数</li></ul><ol><li>应用启动时把浏览量存入redis</li><li>访问时更新到redis</li><li>定时存入mysql数据库（定时任务）</li><li>从redis中获取viewCount</li></ol><p>CommandLineRunner</p><p>定时任务，xxl-job</p><p>@EnableScheduling</p><p>cron表达式</p>`,46),I={href:"https://cron.qqe2.com/index-old.html",target:"_blank",rel:"noopener noreferrer"},T=n("p",null,"秒（0-59） 分钟（0-59） 小时（0-23） 日（1-最后） 月（1-12） 周（1日-7） 年",-1),S=n("p",null,"*",-1),E=n("p",null,",数组 1,2,3 每个",-1),D=n("p",null,"- 1-3",-1),B=n("p",null,"/ 0/5 0~5",-1),R=n("p",null,"包括多个地方查浏览量",-1),C=n("ul",null,[n("li",null,"swagger2")],-1),F=n("p",null,"knife4j",-1),N=n("p",null,"@EnableSwagger2",-1),O={href:"http://localhost:7777/swagger-ui.html",target:"_blank",rel:"noopener noreferrer"},P=p(`<p>swagger配置文件SwaggerConfig</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SwaggerConfig</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">Docket</span> <span class="token function">customDocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Docket</span><span class="token punctuation">(</span><span class="token class-name">DocumentationType</span><span class="token punctuation">.</span><span class="token constant">SWAGGER_2</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span><span class="token class-name">RequestHandlerSelectors</span><span class="token punctuation">.</span><span class="token function">basePackage</span><span class="token punctuation">(</span><span class="token string">&quot;org.blog.controller&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">ApiInfo</span> <span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Contact</span> contact <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Contact</span><span class="token punctuation">(</span><span class="token string">&quot;团队名&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;http://localhost:8080&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;my@email.cn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ApiInfoBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">&quot;标题&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&quot;描述&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">contact</span><span class="token punctuation">(</span>contact<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">&quot;1.0.1&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在实体类中添加说明</p><p>在实体类上使用注解​​​@ApiModel​​​ 在字段上使用注解​​@ApiModelProperty​​</p><p>controller中添加说明</p><p>在类上添加注解​​​@Api​​​，在方法上添加注解​​@ApiOperation​​</p><p>@Api注解</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>tags <span class="token operator">=</span> <span class="token string">&quot;评论接口&quot;</span><span class="token punctuation">,</span> description <span class="token operator">=</span> <span class="token string">&quot;评论相关接口&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>@ApiOperation</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;友链评论列表&quot;</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">&quot;获取友链评论&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>@Api参数描述</p><h2 id="后端界面" tabindex="-1"><a class="header-anchor" href="#后端界面" aria-hidden="true">#</a> 后端界面</h2><p>动态路由</p><p>getInfo接口</p><p>菜单</p><p>getRouters接口</p><p>登出</p><p>java.lang.String cannot be cast to org.blog.domain.entity.LoginUser原因是holder里面没有这个东西能够让自己转换</p><p>标签管理</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token class-name">FieldFill</span><span class="token punctuation">.</span><span class="token constant">INSERT</span><span class="token punctuation">)</span>
<span class="token keyword">private</span> <span class="token class-name">Long</span> createBy<span class="token punctuation">;</span>
<span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token class-name">FieldFill</span><span class="token punctuation">.</span><span class="token constant">INSERT</span><span class="token punctuation">)</span>
<span class="token keyword">private</span> <span class="token class-name">Date</span> createTime<span class="token punctuation">;</span>
<span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token class-name">FieldFill</span><span class="token punctuation">.</span><span class="token constant">INSERT_UPDATE</span><span class="token punctuation">)</span>
<span class="token keyword">private</span> <span class="token class-name">Long</span> updateBy<span class="token punctuation">;</span>
<span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token class-name">FieldFill</span><span class="token punctuation">.</span><span class="token constant">INSERT_UPDATE</span><span class="token punctuation">)</span>
<span class="token keyword">private</span> <span class="token class-name">Date</span> updateTime<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>都是逻辑删除</p><ul><li><p>导出excel</p></li><li><p>接口权限控制</p></li></ul><p>自定义权限获取接口以及校验</p><p>是否置顶代码写反了</p><p>角色先跳过</p><h2 id="最佳实例" tabindex="-1"><a class="header-anchor" href="#最佳实例" aria-hidden="true">#</a> 最佳实例</h2>`,26);function L(V,U){const a=c("ExternalLinkIcon");return o(),l("div",null,[u,n("ul",null,[r,d,k,v,m,g,h,n("li",null,[s("》全局字符串常量与枚举类 "),n("a",_,[s("https://www.zhihu.com/question/33659578"),t(a)])]),b,f,q,w,y]),x,n("p",null,[n("a",j,[s("docker部署"),t(a)])]),A,n("p",null,[n("a",I,[s("在线Cron表达式生成器"),t(a)])]),T,S,E,D,B,R,C,F,N,n("p",null,[n("a",O,[s("http://localhost:7777/swagger-ui.html"),t(a)])]),P])}const z=e(i,[["render",L],["__file","BlogEx.html.vue"]]);export{z as default};
