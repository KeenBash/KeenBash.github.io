import{_ as t,Y as p,Z as e,$ as n,a0 as a,a1 as o,a2 as c,E as u}from"./framework-945e1ba3.js";const i={},l=n("h1",{id:"jquery",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#jquery","aria-hidden":"true"},"#"),a(" JQuery")],-1),r={href:"https://www.w3cschool.cn/jquery/",target:"_blank",rel:"noopener noreferrer"},d=c(`<ul><li><a href="#jquery">JQuery</a><ul><li><a href="#jquery-1">jQuery</a><ul><li><a href="#%E5%BC%95%E5%85%A5-jquery">引入 jQuery</a></li><li><a href="#jquery-%E8%AF%AD%E6%B3%95">jQuery 语法</a></li><li><a href="#%E6%96%87%E6%A1%A3%E5%B0%B1%E7%BB%AA%E4%BA%8B%E4%BB%B6">文档就绪事件</a></li><li><a href="#jquery-%E9%80%89%E6%8B%A9%E5%99%A8">jQuery 选择器</a></li><li><a href="#jquery-%E4%BA%8B%E4%BB%B6">jQuery 事件</a></li><li><a href="#jquery-dom-%E6%93%8D%E4%BD%9C">jQuery DOM 操作</a><ul><li><a href="#texthtml-%E4%BB%A5%E5%8F%8A-val">text()、html() 以及 val()</a></li><li><a href="#attr">attr()</a></li></ul></li><li><a href="#jquery-%E6%B7%BB%E5%8A%A0%E5%85%83%E7%B4%A0">jQuery 添加元素</a></li><li><a href="#jquery-%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0">jQuery 删除元素</a></li><li><a href="#jquery-%E6%93%8D%E4%BD%9C-css">jQuery 操作 CSS</a></li><li><a href="#jquery-%E9%81%8D%E5%8E%86">jQuery 遍历</a><ul><li><a href="#%E5%90%91%E4%B8%8A%E9%81%8D%E5%8E%86-dom-%E6%A0%91">向上遍历 DOM 树</a></li><li><a href="#%E5%90%91%E4%B8%8B%E9%81%8D%E5%8E%86-dom-%E6%A0%91">向下遍历 DOM 树</a></li><li><a href="#%E5%9C%A8-dom-%E6%A0%91%E4%B8%AD%E6%B0%B4%E5%B9%B3%E9%81%8D%E5%8E%86">在 DOM 树中水平遍历</a></li><li><a href="#%E8%BF%87%E6%BB%A4">过滤</a></li></ul></li></ul></li><li><a href="#jquery-ajax">jQuery AJAX</a><ul><li><a href="#ajax">$.ajax()</a></li><li><a href="#get-%E6%96%B9%E6%B3%95">$.get() 方法</a></li><li><a href="#post-%E6%96%B9%E6%B3%95">$.post() 方法</a></li></ul></li></ul></li></ul><h2 id="jquery-1" tabindex="-1"><a class="header-anchor" href="#jquery-1" aria-hidden="true">#</a> jQuery</h2><h3 id="引入-jquery" tabindex="-1"><a class="header-anchor" href="#引入-jquery" aria-hidden="true">#</a> 引入 jQuery</h3><p>在线引入</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://code.jquery.com/jquery-3.6.2.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>本地引入</p><h3 id="jquery-语法" tabindex="-1"><a class="header-anchor" href="#jquery-语法" aria-hidden="true">#</a> jQuery 语法</h3><p>jQuery 语法是通过选取 HTML 元素，并对选取的元素执行某些操作。</p><p>基础语法： $(selector).action()</p><ul><li>美元符号定义 jQuery</li><li>选择符（selector）&quot;查询&quot;和&quot;查找&quot; HTML 元素</li><li>jQuery 的 action() 执行对元素的操作</li></ul><blockquote><p><strong>备注：</strong> jQuery 使用的语法是 XPath 与 CSS 选择器语法的组合。</p><p><strong>备注：</strong> 您可以通过全名 JQuery 方法替代简写的 $ 方式来使用 jQuery</p></blockquote><h3 id="文档就绪事件" tabindex="-1"><a class="header-anchor" href="#文档就绪事件" aria-hidden="true">#</a> 文档就绪事件</h3><p>您也许已经注意到在我们的实例中的所有 jQuery 函数位于一个 document ready 函数中：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

<span class="token comment">// 开始写 jQuery 代码...</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这是为了防止文档在完全加载（就绪）之前运行 jQuery 代码。</p><p>简洁写法（与以上写法效果相同）:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

<span class="token comment">// 开始写 jQuery 代码...</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="jquery-选择器" tabindex="-1"><a class="header-anchor" href="#jquery-选择器" aria-hidden="true">#</a> jQuery 选择器</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>$<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    $<span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>jQuery 选择器基于元素的 id、类、类型、属性、属性值等&quot;查找&quot;（或选择）HTML 元素。它基于已经存在的 CSS 选择器，除此之外，它还有一些自定义的选择器。</p><p>这意味着他选择元素的方法也类似于 document.querySelector(), 不过是使用$()方式。</p><p>下面的例子把所有 p 元素的背景颜色更改为红色：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;background-color&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="jquery-事件" tabindex="-1"><a class="header-anchor" href="#jquery-事件" aria-hidden="true">#</a> jQuery 事件</h3><p>常见 DOM 事件：</p><table><thead><tr><th>鼠标事件</th><th>键盘事件</th><th>表单事件</th><th>文档/窗口事件</th></tr></thead><tbody><tr><td>click</td><td>keypress</td><td>submit</td><td>load</td></tr><tr><td>dblclick</td><td>keydown</td><td>change</td><td>resize</td></tr><tr><td>mouseenter</td><td>keyup</td><td>focus</td><td>scroll</td></tr><tr><td>mouseleave</td><td></td><td>blur</td><td>unload</td></tr><tr><td>hover</td><td></td><td></td><td></td></tr></tbody></table><p>在 jQuery 中，大多数 DOM 事件都有一个等效的 jQuery 方法。</p><p>页面中指定一个点击事件：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      
    <span class="token comment">// action goes here!!        </span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>hover()</code>方法用于模拟光标悬停事件。</p><p>当鼠标移动到元素上时，会触发指定的第一个函数(mouseenter)，当鼠标移出这个元素时，会触发指定的第二个函数(mouseleave)。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#p1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hover</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;You entered p1!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;Bye! You now leave p1!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="jquery-dom-操作" tabindex="-1"><a class="header-anchor" href="#jquery-dom-操作" aria-hidden="true">#</a> jQuery DOM 操作</h3><h4 id="text-、html-以及-val" tabindex="-1"><a class="header-anchor" href="#text-、html-以及-val" aria-hidden="true">#</a> text()、html() 以及 val()</h4><p>三个用于 DOM 操作的 jQuery 方法：</p><ul><li>text() - 设置或返回所选元素的文本内容</li><li>html() - 设置或返回所选元素的内容（包括 HTML 标记）</li><li>val() - 设置或返回表单字段的值</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#btn1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;Value: &quot;</span> <span class="token operator">+</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的三个 jQuery 方法：text()、html() 以及 val()，同样拥有<strong>回调函数</strong>。回调函数有两个参数：被选元素列表中当前元素的下标，以及原始（旧的）值。然后以函数新值返回您希望使用的字符串。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#btn1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#test1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">i<span class="token punctuation">,</span>origText</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Old text: &quot;</span> <span class="token operator">+</span> origText <span class="token operator">+</span> &quot; New text<span class="token operator">:</span> Hello world<span class="token operator">!</span>
    <span class="token punctuation">(</span>index<span class="token operator">:</span> <span class="token string">&quot; + i + &quot;</span><span class="token punctuation">)</span>&quot;<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="attr" tabindex="-1"><a class="header-anchor" href="#attr" aria-hidden="true">#</a> attr()</h4><p>attr() 方法也用于设置/改变属性值。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#link&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;href&quot;</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#link&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;href&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>attr() 方法也允许您同时设置多个属性。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#link&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token string-property property">&quot;href&quot;</span> <span class="token operator">:</span> url<span class="token punctuation">,</span>
    <span class="token string-property property">&quot;title&quot;</span> <span class="token operator">:</span> title
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>attr()，也提供回调函数如上。</p><h3 id="jquery-添加元素" tabindex="-1"><a class="header-anchor" href="#jquery-添加元素" aria-hidden="true">#</a> jQuery 添加元素</h3><p>我们将学习用于添加新内容的四个 jQuery 方法：</p><ul><li>append() - 在被选元素内部的结尾插入指定内容</li><li>prepend() - 在被选元素内部的开头插入指定内容</li><li>after() - 在被选元素之后插入内容</li><li>before() - 在被选元素之前插入内容</li></ul><p>append() 和 prepend() 方法能够通过参数接收无限数量的新元素。可以通过 jQuery 来生成文本/HTML（就像上面的例子那样），或者通过 JavaScript 代码和 DOM 元素。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">appendText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 使用 HTML 标签创建文本 </span>
    <span class="token keyword">let</span> txt1 <span class="token operator">=</span> <span class="token string">&quot;&lt;p&gt;Text&lt;/p&gt;&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">// 使用 jQuery 创建文本               </span>
    <span class="token keyword">let</span> txt2 <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;p&gt;&lt;/p&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&quot;Text&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 使用 DOM 创建文本 text </span>
    <span class="token keyword">let</span> txt3 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    txt3<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&quot;文本&quot;</span><span class="token punctuation">;</span> 
    <span class="token comment">// 追加新元素               </span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>txt1<span class="token punctuation">,</span>txt2<span class="token punctuation">,</span>txt3<span class="token punctuation">)</span><span class="token punctuation">;</span>         
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="jquery-删除元素" tabindex="-1"><a class="header-anchor" href="#jquery-删除元素" aria-hidden="true">#</a> jQuery 删除元素</h3><p>如需删除元素和内容，一般可使用以下两个 jQuery 方法：</p><ul><li>remove() - 删除被选元素（及其子元素）</li><li>empty() - 从被选元素中删除子元素</li></ul><p>过滤被删除的元素</p><p>jQuery remove() 方法也可接受一个参数，允许您对被删元素进行过滤。</p><p>该参数可以是任何 jQuery 选择器的语法。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&quot;.italic&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="jquery-操作-css" tabindex="-1"><a class="header-anchor" href="#jquery-操作-css" aria-hidden="true">#</a> jQuery 操作 CSS</h3><p>jQuery 拥有若干进行 CSS 操作的方法。我们将学习下面这些：</p><ul><li>addClass() - 向被选元素添加一个或多个类</li><li>removeClass() - 从被选元素删除一个或多个类</li><li>toggleClass() - 对被选元素进行添加/删除类的切换操作</li><li>css() - 设置或返回样式属性</li></ul><p>在添加类时，您也可以选取多个元素，用逗号隔开</p><p>css() 方法</p><p>如需返回指定的 CSS 属性的值，请使用如下语法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;propertyname&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如需设置指定的 CSS 属性，请使用如下语法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;propertyname&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>设置多个 CSS 属性语法类似json键值对</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string-property property">&quot;k1&quot;</span><span class="token operator">:</span><span class="token string">&quot;v1&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;k2&quot;</span><span class="token operator">:</span><span class="token string">&quot;v2&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="jquery-遍历" tabindex="-1"><a class="header-anchor" href="#jquery-遍历" aria-hidden="true">#</a> jQuery 遍历</h3><h4 id="向上遍历-dom-树" tabindex="-1"><a class="header-anchor" href="#向上遍历-dom-树" aria-hidden="true">#</a> 向上遍历 DOM 树</h4><p>这些 jQuery 方法很有用，它们用于向上遍历 DOM 树：</p><ul><li>parent() - 返回被选元素的直接父元素</li><li>parents() - 返回被选元素的所有祖先元素，它一路向上直到文档的根元素 (&lt;html&gt;)。</li><li>parentsUntil() - 返回介于两个给定元素之间的所有祖先元素。</li></ul><p>parentsUntil()</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;span&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parentsUntil</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="向下遍历-dom-树" tabindex="-1"><a class="header-anchor" href="#向下遍历-dom-树" aria-hidden="true">#</a> 向下遍历 DOM 树</h4><p>下面是两个用于向下遍历 DOM 树的 jQuery 方法：</p><ul><li>children() - 返回被选元素的所有直接子元素</li><li>find() - 返回被选元素的后代元素，一路向下直到最后一个后代</li></ul><h4 id="在-dom-树中水平遍历" tabindex="-1"><a class="header-anchor" href="#在-dom-树中水平遍历" aria-hidden="true">#</a> 在 DOM 树中水平遍历</h4><p>有许多有用的方法让我们在 DOM 树进行水平遍历：</p><ul><li>siblings() - 返回被选元素的所有同胞元素</li><li>next() - 返回被选元素的下一个同胞元素</li><li>nextAll() - 返回被选元素的所有跟随的同胞元素</li><li>nextUntil() - 返回介于两个给定参数之间的所有跟随的同胞元素</li><li>prev()</li><li>prevAll()</li><li>prevUntil()</li></ul><h4 id="过滤" tabindex="-1"><a class="header-anchor" href="#过滤" aria-hidden="true">#</a> 过滤</h4><p>三个最基本的过滤方法是：</p><ul><li>first() - 返回被选元素的首个元素</li><li>last() - 返回被选元素的最后一个元素</li><li>eq() - 返回被选元素中带有指定索引号的元素</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="jquery-ajax" tabindex="-1"><a class="header-anchor" href="#jquery-ajax" aria-hidden="true">#</a> jQuery AJAX</h2><h3 id="ajax" tabindex="-1"><a class="header-anchor" href="#ajax" aria-hidden="true">#</a> $.ajax()</h3><p>参数：</p><ul><li>type：请求方式GET/POST</li><li>url: 请求地址 url</li><li>data：发送到服务器的数据</li><li>dataType：预期服务器返回的数据类型</li><li>contentType：设置请求头</li><li>success：请求成功时调用此函数</li><li>error：请求失败时调用此函数</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#bt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;get&quot;</span><span class="token punctuation">,</span>        
        <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;js/data.txt&quot;</span><span class="token punctuation">,</span> 
        <span class="token literal-property property">dataType</span><span class="token operator">:</span> <span class="token string">&quot;json&quot;</span><span class="token punctuation">,</span>   
        <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   
            <span class="token comment">// Dom 操作</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="get-方法" tabindex="-1"><a class="header-anchor" href="#get-方法" aria-hidden="true">#</a> $.get() 方法</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>$<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">URL</span><span class="token punctuation">,</span>data<span class="token punctuation">,</span>callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>URL 参数规定您希望请求的 URL。</li><li>data 参数规定连同请求发送的数据。</li><li>callback 参数是请求成功后所执行的函数名。</li></ul><h3 id="post-方法" tabindex="-1"><a class="header-anchor" href="#post-方法" aria-hidden="true">#</a> $.post() 方法</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>$<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token constant">URL</span><span class="token punctuation">,</span>data<span class="token punctuation">,</span>callback<span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>URL 参数规定您希望请求的 URL。</li><li>data 参数规定连同请求发送的数据。</li><li>callback 参数是请求成功后所执行的函数名。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  $<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;url&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;Donald Duck&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">city</span><span class="token operator">:</span><span class="token string">&quot;Duckburg&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span>status</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;Data: &quot;</span> <span class="token operator">+</span> data <span class="token operator">+</span> <span class="token string">&quot;\\nStatus: &quot;</span> <span class="token operator">+</span> status<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,96);function k(v,m){const s=u("ExternalLinkIcon");return p(),e("div",null,[l,n("p",null,[n("a",r,[a("JQuery参考"),o(s)])]),d])}const b=t(i,[["render",k],["__file","JQuery.html.vue"]]);export{b as default};
