import{_ as t,Y as e,Z as p,$ as a,a0 as n,a1 as l,a2 as o,E as c}from"./framework-e3f91821.js";const u={},i=a("h1",{id:"themyleaf",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#themyleaf","aria-hidden":"true"},"#"),n(" ThemyLeaf")],-1),r={href:"https://www.thymeleaf.org/documentation.html",target:"_blank",rel:"noopener noreferrer"},d=o(`<ul><li><a href="#themyleaf">ThemyLeaf</a><ul><li><a href="#%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4">命名空间</a></li><li><a href="#%E8%AF%AD%E6%B3%95%E4%BB%8B%E7%BB%8D">语法介绍</a><ul><li><a href="#%E8%A1%A8%E8%BE%BE%E5%BC%8F">表达式</a><ul><li><a href="#%E5%8F%98%E9%87%8F%E8%A1%A8%E8%BE%BE%E5%BC%8F">变量表达式\${}</a></li><li><a href="#%E9%80%89%E6%8B%A9%E5%8F%98%E9%87%8F%E8%A1%A8%E8%BE%BE%E5%BC%8F">选择变量表达式*{}</a></li><li><a href="#%E8%A1%A8%E8%BE%BE%E5%BC%8F-1">表达式@</a></li></ul></li><li><a href="#%E8%A1%8C%E5%86%85%E5%86%99%E6%B3%95">行内写法</a></li><li><a href="#th-%E5%B1%9E%E6%80%A7">th 属性</a></li><li><a href="#%E5%85%AC%E5%85%B1%E9%A1%B5%E9%9D%A2">公共页面</a><ul><li><a href="#%E5%BC%95%E5%85%A5">引入</a></li><li><a href="#%E4%BC%A0%E9%80%92%E5%8F%82%E6%95%B0">传递参数</a></li></ul></li></ul></li><li><a href="#%E5%AF%BC%E5%85%A5%E4%BE%9D%E8%B5%96">导入依赖</a></li><li><a href="#ssm%E6%95%B4%E5%90%88themyleaf">SSM整合ThemyLeaf</a><ul><li><a href="#%E9%85%8D%E7%BD%AEspring-mvcxml">配置spring-mvc.xml</a></li><li><a href="#%E4%BD%BF%E7%94%A8">使用</a></li></ul></li><li><a href="#springboot%E6%95%B4%E5%90%88">SpringBoot整合</a></li></ul></li></ul><h2 id="命名空间" tabindex="-1"><a class="header-anchor" href="#命名空间" aria-hidden="true">#</a> 命名空间</h2><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>xmlns:th=&quot;http://www.thymeleaf.org&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="语法介绍" tabindex="-1"><a class="header-anchor" href="#语法介绍" aria-hidden="true">#</a> 语法介绍</h2><h3 id="表达式" tabindex="-1"><a class="header-anchor" href="#表达式" aria-hidden="true">#</a> 表达式</h3><h4 id="变量表达式" tabindex="-1"><a class="header-anchor" href="#变量表达式" aria-hidden="true">#</a> 变量表达式\${}</h4><p>使用<code>\${...}</code>包裹的表达式被称为变量表达式，该表达式具有以下功能：</p><ul><li>获取对象的属性和方法</li><li>使用内置的基本对象</li><li>使用内置的工具对象</li></ul><p>1.获取对象的属性和方法</p><p>使用变量表达式可以获取对象的属性和方法，例如，获取 person 对象的 lastName 属性，表达式形式如下：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>\${person.lastName}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2.使用内置的基本对象</p><p>使用变量表达式还可以使用内置基本对象，获取内置对象的属性，调用内置对象的方法。Thymeleaf 中常用的内置基本对象如下：</p><ul><li>request：HttpServletRequest 对象（仅在 Web 应用中可用）；</li><li>response：HttpServletResponse 对象（仅在 Web 应用中可用）；</li><li>session：HttpSession 对象（仅在 Web 应用中可用）；</li><li>servletContext：ServletContext 对象（仅在 Web 应用中可用）。</li></ul><p>例如，我们通过以下 2 种形式，都可以获取到 session 对象中的 map 属性：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>\${#session.getAttribute(&#39;map&#39;)}
\${session.map}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>3.使用内置的工具对象</p><p>除了能使用内置的基本对象外，变量表达式还可以使用一些内置的工具对象。</p><ul><li>strings：字符串工具对象，常用方法有：equals、equalsIgnoreCase、length、trim、toUpperCase、toLowerCase、indexOf、substring、replace、startsWith、endsWith，contains 和 containsIgnoreCase 等；</li><li>numbers：数字工具对象，常用的方法有：formatDecimal 等；</li><li>bools：布尔工具对象，常用的方法有：isTrue 和 isFalse 等；</li><li>arrays：数组工具对象，常用的方法有：toArray、length、isEmpty、contains 和 containsAll 等；</li><li>lists/sets：List/Set 集合工具对象，常用的方法有：toList、size、isEmpty、contains、containsAll 和 sort 等；</li><li>maps：Map 集合工具对象，常用的方法有：size、isEmpty、containsKey 和 containsValue 等；</li><li>dates：日期工具对象，常用的方法有：format、year、month、hour 和 createNow 等。</li></ul><p>例如，我们可以使用内置工具对象 strings 的 equals 方法，来判断字符串与对象的某个属性是否相等，代码如下。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>\${#strings.equals(&#39;编程&#39;,name)}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="选择变量表达式" tabindex="-1"><a class="header-anchor" href="#选择变量表达式" aria-hidden="true">#</a> 选择变量表达式*{}</h4><p>选择变量表达式与变量表达式功能基本一致，只是在变量表达式的基础上增加了与 th:object 的配合使用。当使用 th:object 存储一个对象后，我们可以在其后代中使用选择变量表达式（<code>*{...}</code>）获取该对象中的属性，其中，“*”即代表该对象。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>object</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${session.user}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>*{fisrtName}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>firstname<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>th:object 用于存储一个临时变量，该变量只在该标签及其后代中有效</p></blockquote><h4 id="表达式-1" tabindex="-1"><a class="header-anchor" href="#表达式-1" aria-hidden="true">#</a> 表达式@</h4><p>引用url</p><h3 id="行内写法" tabindex="-1"><a class="header-anchor" href="#行内写法" aria-hidden="true">#</a> 行内写法</h3><p>直接在标签内写[[\${xxx}]]</p><h3 id="th-属性" tabindex="-1"><a class="header-anchor" href="#th-属性" aria-hidden="true">#</a> th 属性</h3><table><thead><tr><th>属性</th><th>描述</th><th>示例</th></tr></thead><tbody><tr><td>th:id</td><td>替换 HTML 的 id 属性</td><td><code>&lt;input id=&quot;html-id&quot; th:id=&quot;thymeleaf-id&quot;/&gt;</code></td></tr><tr><td>th:text</td><td>文本替换，转义特殊字符</td><td><code>&lt;h1 th:text=&quot;hello，bianchengbang&quot; &gt;hello&lt;/h1&gt;</code></td></tr><tr><td>th:utext</td><td>文本替换，不转义特殊字符</td><td><code>&lt;div th:utext=&quot;&#39;&lt;h1&gt;欢迎来到编程帮！&lt;/h1&gt;&#39;&quot; &gt;欢迎你&lt;/div&gt;</code></td></tr><tr><td>th:attr</td><td>设置html元素属性</td><td><code>&lt;img th:attr=&quot;src=@{/1.png},title=\${user.username},alt=\${user.username}&quot;&gt;</code></td></tr></tbody></table><p><code>th:each</code>用法</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>teacher,count:\${teachers.list}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>迭代下标变量用法：</p><p>状态变量定义在一个th:每个属性和包含以下数据:</p><ul><li>index: 当前迭代对象的迭代索引，从0开始，这是索引属性；</li><li>count: 当前迭代对象的迭代索引，从1开始，这个是统计属性；</li><li>size: 迭代变量元素的总量，这是被迭代对象的大小属性；</li><li>current: 当前迭代变量；</li><li>even/odd: 布尔值，当前循环是否是偶数/奇数（从0开始计算）；</li><li>first: 布尔值，当前循环是否是第一个；</li><li>last: 布尔值，当前循环是否是最后一个；</li></ul><p><code>th:if</code>用于判断</p><p>用法:</p><p><code>th:if=&quot;\${xx} lt &#39;x&#39;&quot;</code> &lt;-----------&gt; <code>xx &lt; x</code></p><p>thymeleaf 判断表达式：</p><ul><li>gt：great than（大于）&gt;</li><li>ge：great equal（大于等于）&gt;=</li><li>eq：equal（等于）==</li><li>lt：less than（小于）&lt;</li><li>le：less equal（小于等于）&lt;=</li><li>ne：not equal（不等于）!=</li></ul><h3 id="公共页面" tabindex="-1"><a class="header-anchor" href="#公共页面" aria-hidden="true">#</a> 公共页面</h3><h4 id="引入" tabindex="-1"><a class="header-anchor" href="#引入" aria-hidden="true">#</a> 引入</h4><p>include insert replace</p><p>将公共页面片段抽取出来，存放在 commons.html 中，代码如下。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>fragment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fragment-name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>公共页面片段<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>th:replace：将代码块片段整个替换使用了 th:replace 属性的 HTML 标签中</p><p>在页面 fragment.html 中引入 commons.html 中声明的页面片段，可以通过以下方式实现。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- th:replace 片段名引入 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>replace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>commons::fragment-name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>可以用id, 然后使用<code>commons::#id</code>选择</p><h4 id="传递参数" tabindex="-1"><a class="header-anchor" href="#传递参数" aria-hidden="true">#</a> 传递参数</h4><p>引用公共页面片段时，我们可以通过以下 2 种方式，将参数传入到被引用的页面片段中：</p><ul><li>模板名::选择器名或片段名(参数1=参数值1,参数2=参数值2)</li><li>模板名::选择器名或片段名(参数值1,参数值2)</li></ul><blockquote><p>注： 若传入参数较少时，一般采用第二种方式，直接将参数值传入页面片段中 若参数较多时，建议使用第一种方式，明确指定参数名和参数值</p></blockquote><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--th:replace 片段名引入--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>replace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>commons::fragment-name(var1=&#39;replace-name&#39;,var2=&#39;replace-name2&#39;)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在声明页面片段时，我们可以在片段中声明并使用这些参数，例如：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--使用 var1 和 var2 声明传入的参数，并在该片段中直接使用这些参数 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>fragment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fragment-name(var1,var2)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>参数1:&#39;+\${var1} + &#39;-------------------参数2:&#39; + \${var2}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="导入依赖" tabindex="-1"><a class="header-anchor" href="#导入依赖" aria-hidden="true">#</a> 导入依赖</h2><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.thymeleaf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>thymeleaf-spring5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.0.15.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ssm整合themyleaf" tabindex="-1"><a class="header-anchor" href="#ssm整合themyleaf" aria-hidden="true">#</a> SSM整合ThemyLeaf</h2><h3 id="配置spring-mvc-xml" tabindex="-1"><a class="header-anchor" href="#配置spring-mvc-xml" aria-hidden="true">#</a> 配置spring-mvc.xml</h3><p>默认视图解析器</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 默认视图解析器 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.springframework.web.servlet.view.InternalResourceViewResolver<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>prefix<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/WEB-INF/pages/<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>suffix<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>.html<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>order<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>转换为themyleaf</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- thymeleaf模板解析器 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>templateResolver<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>prefix<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/WEB-INF/pages/<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>suffix<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>.html<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>characterEncoding<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 配置模板引擎 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>springTemplateEngine<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.thymeleaf.spring5.SpringTemplateEngine<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>templateResolver<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>templateResolver<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 配置视图解析器 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>thymeleafViewResolver<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.thymeleaf.spring5.view.ThymeleafViewResolver<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>characterEncoding<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>templateEngine<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>springTemplateEngine<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>order<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h3><h2 id="springboot整合" tabindex="-1"><a class="header-anchor" href="#springboot整合" aria-hidden="true">#</a> SpringBoot整合</h2><p>导入依赖</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-thymeleaf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看自动配置了什么 ThemyleafProperties</p><p>配好了 SpringTemplateEngine</p>`,71);function k(m,g){const s=c("ExternalLinkIcon");return e(),p("div",null,[i,a("p",null,[a("a",r,[n("官方文档"),l(s)])]),d])}const v=t(u,[["render",k],["__file","ThemyLeaf.html.vue"]]);export{v as default};
